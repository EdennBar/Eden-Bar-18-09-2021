{"version":3,"sources":["redux/contants/action-types.js","redux/actions/weatherActions.js","components/SaveFavorite.js","components/Weather.js","components/NavBar.js","components/SearchForLocation.js","components/Favorite.js","components/Home.js","App.js","redux/reducers/weatherReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ActionTypes","ChangeLocation","location","type","payload","ChangeSearch","text","SaveFavorite","useSelector","state","weather","shallowEqual","style","marginTop","Button","variant","color","onClick","Name","LocalizedName","Key","favorites","localStorage","getItem","undefined","JSON","parse","getItemFromLocalStorage","newFavorite","push","setItem","stringify","useStyles","makeStyles","root","maxWidth","transition","transform","media","height","width","Weather","classes","useState","conditions","setConditions","forecast","setForecast","useDispatch","a","axios","get","catch","err","console","log","conditionsData","forecastData","data","DailyForecasts","filterIntToDay","num","useEffect","getWeather","Typography","fontSize","conditionData","Temperature","Metric","Value","celOrFar","Grid","container","sx","flexGrow","spacing","justifyContent","map","day","conditionIcon","hours","item","xs","Card","backgroundColor","className","CardMedia","image","Date","getHours","CardContent","src","WeatherIcon","Maximum","Minimum","getDay","theme","NavBar","AppBar","position","Toolbar","edge","textDecoration","to","pathname","palette","background","paper","Location","dispatch","hideSuggestions","toggleHide","suggestions","setSuggetions","fetchAutoComplete","search","response","e","target","value","suggstionView","length","Box","bgcolor","List","component","city","ListItem","button","ListItemText","primary","Divider","showList","TextField","label","onChange","evt","onCityChange","Favorite","readFavoritesFromLocalStorage","setFavorites","favorite","tmp","Home","direction","SearchForLocation","App","path","exact","initialState","locationWeather","reducers","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85869d15.chunk.js","sourcesContent":["export const ActionTypes={\r\n    CHANGE_LOCATION:\"CHANGE_LOCATION\",\r\n    CHANGE_DAILYFORCAST:\"CHANGE_DAILYFORCAST\",\r\n    CHANGE_WEATHER:\"CHANGE_WEATHER\",\r\n    CHANGE_SEARCH:\"CHANGE_SEARCH\",\r\n    REMOVE_SELECTED_WEATHER:\"REMOVE_SELECTED_WEATHER\",\r\n}","import { ActionTypes } from \"../contants/action-types\"\r\n\r\n//Saves weather at the time of look up\r\nexport const ChangeWeather = (weather) => {\r\n    return {\r\n        type: ActionTypes.CHANGE_WEATHER,\r\n        payload: weather,\r\n\r\n    };\r\n};\r\n\r\n//Saves the next days forecast data\r\nexport const ChangeDailyForcast = (dailyForcast) => {\r\n    return {\r\n        type: ActionTypes.CHANGE_DAILYFORCAST,\r\n        payload: dailyForcast,\r\n\r\n    };\r\n};\r\n\r\n//Saves the current location\r\nexport const ChangeLocation = (location) => {\r\n    return {\r\n        type: ActionTypes.CHANGE_LOCATION,\r\n        payload: location,\r\n\r\n    };\r\n};\r\n\r\n//Saves the current text\r\nexport const ChangeSearch = (text) => {\r\n    return {\r\n        type: ActionTypes.CHANGE_SEARCH,\r\n        payload: text,\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n","import { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { ChangeLocation } from '../redux/actions/weatherActions';\r\nimport { setLocation } from '../redux/actions/weatherActions';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst SaveFavorite = () => {\r\n     const location = useSelector((state) => {\r\n        return state.weather.location\r\n     }, shallowEqual);\r\n     \r\n\r\n    \r\n\r\n    function addFavorites() {\r\n    var Name=location.LocalizedName;\r\n    var Key =location.Key;\r\n    var favorites= getItemFromLocalStorage()\r\n    var newFavorite={Name,Key}\r\n    favorites.push(newFavorite)\r\n    localStorage.setItem('favorites',JSON.stringify(favorites))\r\n    \r\n    }\r\n\r\n    function getItemFromLocalStorage(){\r\n        const favorites=localStorage.getItem('favorites')\r\n        if(favorites==undefined){\r\n            return [];\r\n        }\r\n        return JSON.parse(favorites);\r\n    }\r\n   \r\n    return (<div>\r\n         <div style={{marginTop:'50px'}}></div>\r\n<Button variant=\"contained\" color=\"primary\" onClick={addFavorites}>Save Favorite</Button>\r\n    </div>);\r\n}\r\n\r\nexport default SaveFavorite;\r\n\r\n\r\n\r\n\r\n","import MenuItem from '@mui/material/MenuItem';\r\nimport Grid from '@mui/material/Grid';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { setLocation } from '../redux/actions/weatherActions';\r\nimport { render } from '@testing-library/react';\r\nimport _, { debounce } from 'lodash';\r\nimport { ChangeLocation } from '../redux/actions/weatherActions';\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Box from '@mui/material/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SaveFavorite from './SaveFavorite';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        transition: \"transform 0.15s ease-in-out\",\r\n        \"&:hover\": { transform: \"scale3d(1.05, 1.05, 1)\" },\r\n    },\r\n    media: {\r\n        height: 200,\r\n        width: \"100%\",\r\n    },\r\n});\r\nconst Weather = () => {\r\n    const classes = useStyles();\r\n    //current temprature\r\n    const [conditions, setConditions] = useState(undefined)\r\n    //5 day tahazit data\r\n    const [forecast, setForecast] = useState([])\r\n    const dispatch = useDispatch();\r\n    const location = useSelector((state) => {\r\n        return state.weather.location\r\n    }, shallowEqual);\r\n\r\n    useEffect(() => {\r\n        if (location != undefined) {\r\n            getWeather(location)\r\n        }\r\n    }, [location])\r\n\r\n    async function getWeather(location) {\r\n        if (location.Key != undefined) {\r\n            var conditionsData = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${location.Key}?apikey=HF3kpypsMoOeezlda71T5jceTHsrBVRC\r\n            `).catch((err) => {\r\n                console.log(\"Err\", err);\r\n            })\r\n            var forecastData = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.Key}?apikey=HF3kpypsMoOeezlda71T5jceTHsrBVRC\r\n            `)\r\n            console.log(conditionsData)\r\n            setConditions(conditionsData.data[0])\r\n            console.log(forecastData)\r\n            setForecast(forecastData.data.DailyForecasts)\r\n        }\r\n\r\n    }\r\n\r\n    function filterIntToDay(num) {\r\n        switch (num) {\r\n            case 0: return 'Sunday';\r\n            case 1: return 'Monday';\r\n            case 2: return 'Tuesday';\r\n            case 3: return 'Wednesday';\r\n            case 4: return 'Thursday';\r\n            case 5: return 'Friday';\r\n            case 6: return 'Saturday';\r\n        }\r\n    }\r\n    //\r\n\r\n    function statusOfDay(hours) {\r\n\r\n        let timeSrc = null;\r\n        if (hours >= 6 && hours < 18) {\r\n            return timeSrc = 'https://raw.githubusercontent.com/AsishRaju/Weather-App/master/img/day.svg'\r\n        } else {\r\n            return timeSrc = 'https://raw.githubusercontent.com/AsishRaju/Weather-App/master/img/night.svg'\r\n        }\r\n    }\r\n\r\n    function icons(conditionIcon) {\r\n        return `https://raw.githubusercontent.com/AsishRaju/Weather-App/master/img/icons/${conditionIcon}.svg`;\r\n    }\r\n\r\n    function celOrFar(conditionData) {\r\n        if (conditionData == undefined) return;\r\n        if (true) {\r\n            return conditionData.Temperature.Metric.Value + 'C'\r\n        }\r\n        return conditionData.Temperature.Imperial.Value + 'F'\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography style={{fontSize:'1.5rem'}}>{celOrFar(conditions)} </Typography>\r\n            <div style={{height:'30px'}}></div>\r\n            <Grid container sx={{ flexGrow: 1 }}spacing={2} justifyContent=\"center\">\r\n\r\n                {forecast.map((day) => {\r\n                    return (<Grid item xs={12} item md={2}>\r\n                        <Card style={{backgroundColor:'#F5F5F5'}}className={classes.root}>\r\n                            <CardMedia className={classes.media} image={statusOfDay(new Date(Date.parse(day.Date)).getHours())} />\r\n                            <CardContent>\r\n                                <Typography>{location.LocalizedName} </Typography>\r\n                                <img src={icons(conditions.WeatherIcon)} />\r\n                                <Typography>Day {(day.Temperature.Maximum.Value-30)/2} </Typography>\r\n                                <Typography>Night {(day.Temperature.Minimum.Value-30)/2} </Typography>\r\n                                <Typography>{filterIntToDay(new Date(Date.parse(day.Date)).getDay())} </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </Grid>)\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Weather;","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n   \r\n    \r\n  }));\r\n  \r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    return (  \r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{width:'100%'}}>\r\n            \r\n          <Toolbar >\r\n          \r\n            <Typography variant=\"h6\" edge=\"start\">\r\n            <Link style={{ textDecoration: 'none', color:'white', fontSize:'1.5rem'}} to={{pathname: \"/favorite\"}}>Favorite</Link>\r\n            </Typography>\r\n           \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n    );\r\n}\r\n \r\nexport default NavBar;\r\n","import MenuItem from '@mui/material/MenuItem';\r\nimport Grid from '@mui/material/Grid';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { setLocation } from '../redux/actions/weatherActions';\r\nimport { render } from '@testing-library/react';\r\nimport _, { debounce } from 'lodash';\r\nimport { ChangeLocation, ChangeSearch } from '../redux/actions/weatherActions';\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Box from '@mui/material/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\nconst Location = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const text = useSelector((state) => {\r\n        var a = 0\r\n        return state.weather.text\r\n    }, shallowEqual);\r\n    const [hideSuggestions, toggleHide] = useState(false);\r\n    const [search, setSearch] = useState([]);\r\n    const [suggestions, setSuggetions] = useState([])\r\n\r\n    const fetchAutoComplete = async (search) => {\r\n        const response = await axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=HF3kpypsMoOeezlda71T5jceTHsrBVRC\r\n        &q=${search}`).catch((err) => {\r\n            console.log(\"Err\", err);\r\n        })\r\n        setSuggetions(response.data);\r\n        console.log(suggestions)\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     fetchAutoComplete(search);\r\n    // }, [search]\r\n    // )\r\n\r\n    async function onCityChange(e) {\r\n        if (hideSuggestions == true)\r\n            toggleHide(false)\r\n        dispatch(ChangeSearch(e.target.value))\r\n        await fetchAutoComplete(e.target.value)\r\n    }\r\n\r\n    function dispatchLocationChange(location) {\r\n        dispatch(ChangeLocation(location))\r\n    }\r\n\r\n    function showList() {\r\n        if (suggestions != undefined && suggestions.length > 0) {\r\n            return (<Grid container sx={{ flexGrow: 1 }} justifyContent=\"center\">\r\n                <Box style={{width:'200px'}} sx={{ bgcolor: 'background.paper' }}>\r\n                    <List component=\"nav\" aria-label=\"secondary mailbox folder\">\r\n                        {suggestions.map((city) => {\r\n                            return (<div><ListItem button><ListItemText onClick={() => { toggleHide(true); dispatchLocationChange(city) }} primary={city.LocalizedName} /></ListItem><Divider/></div>)\r\n                        })}\r\n                    </List>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    var suggstionView = undefined;\r\n    if (!hideSuggestions) {\r\n        suggstionView = showList()\r\n    }\r\n\r\n    return (\r\n        (<div>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div style={{ height: '50px' }}></div>\r\n                    <TextField label={'location...'} type=\"text\" variant=\"outlined\" onChange={(evt) => {\r\n                        onCityChange(evt)\r\n                    }} />\r\n                    {suggstionView}\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>)\r\n    );\r\n}\r\n\r\nexport default Location;","import { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { ChangeLocation } from '../redux/actions/weatherActions';\r\nimport { setLocation } from '../redux/actions/weatherActions';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst Favorite = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>\r\n    {\r\n        readFavoritesFromLocalStorage()\r\n    },[])\r\nconst [favorites,setFavorites]=useState([])\r\n    async function readFavoritesFromLocalStorage() {\r\n        var favorites = getItemFromLocalStorage()\r\n\r\n        for (var favorite of favorites) {\r\n            var conditionsData = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${favorite.Key}?apikey=HF3kpypsMoOeezlda71T5jceTHsrBVRC`).catch((err) => {\r\n                console.log(\"Err\", err);\r\n            })\r\n            favorite.tmp=celOrFar(conditionsData.data[0])\r\n        }\r\n        setFavorites(favorites);        \r\n    }\r\n\r\n    function celOrFar(conditionData){\r\n        if(true){\r\n            return conditionData.Temperature.Metric.Value\r\n        }\r\n        return conditionData.data[0].Temperature.Imperial.Value+'F'\r\n    }\r\n\r\n    function getItemFromLocalStorage() {\r\n        const favorites = localStorage.getItem('favorites')\r\n        if (favorites == undefined) {\r\n            return [];\r\n        }\r\n        return JSON.parse(favorites);\r\n    }\r\n  \r\n    function dispatchLocationChange(location) {\r\n        dispatch(ChangeLocation(location))\r\n    }\r\n\r\n    return (\r\n      \r\n        <Grid container>\r\n        {favorites.map((favorite) => {\r\n            return (<Grid item xs={12} item sm={3} item md={2} item lg={2}>\r\n\r\n                <Card style={{height:'440px'}}>\r\n                    <CardContent>\r\n                        <Typography>{favorite.Name} </Typography>\r\n                        <Typography>{favorite.tmp}</Typography>\r\n                      <Link onClick={()=>{dispatchLocationChange({Key:favorite.Key,LocalizedName:favorite.Name})}} to={{pathname: \"/\"}}>Move to Weather Page</Link>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n            </Grid>)\r\n        })}\r\n      \r\n    </Grid>\r\n    );\r\n}\r\n\r\nexport default Favorite;","import Weather from './Weather';\r\nimport SearchForLocation from \"./SearchForLocation\";\r\nimport SaveFavorite from \"./SaveFavorite\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Grid container direction=\"column\" justifyContent=\"center\">\r\n            <Grid item ><SearchForLocation></SearchForLocation></Grid>\r\n            <div style={{ height: '50px' }}></div>\r\n            <Grid item><Weather></Weather></Grid>\r\n            <Grid item><SaveFavorite></SaveFavorite></Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Weather from './components/Weather';\nimport NavBar from './components/NavBar';\nimport SearchForLocation from \"./components/SearchForLocation\";\nimport Favorite from \"./components/Favorite\";\nimport SaveFavorite from\"./components/SaveFavorite\"\nimport Home from\"./components/Home\"\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Router>\n      <NavBar></NavBar>\n       <Switch>\n       <Route path=\"/\" exact component={Home}></Route>        \n       <Route path=\"/favorite\" exact component={Favorite}></Route>\n      </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../contants/action-types\";\r\n\r\nconst initialState = {\r\n    location: {Key:'215854', LocalizedName:'Tel Aviv'},\r\n    locationWeather:[]\r\n\r\n\r\n};\r\nexport const weatherReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.CHANGE_WEATHER:\r\n            return {...state, locationWeather: payload };\r\n\r\n        case ActionTypes.CHANGE_LOCATION:\r\n            return {...state, location: payload}\r\n        case ActionTypes.CHANGE_SEARCH:\r\n            return {...state, text: payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {weatherReducer} from './weatherReducer';\r\n\r\nconst reducers= combineReducers({\r\n    weather:weatherReducer,\r\n})\r\n\r\n\r\nexport default reducers;","import { createStore } from \"redux\";\r\nimport reducer from './reducers/index';\r\n\r\nconst store=createStore(reducer,{},window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\r\n);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}